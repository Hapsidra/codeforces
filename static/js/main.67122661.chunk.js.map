{"version":3,"sources":["history.js","Table.js","App.js","index.js"],"names":["createBrowserHistory","Table","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","problems","_this2","handle","match","params","search","history","listen","location","action","pathname","substring","lastIndexOf","console","log","length","setState","fetch","response","json","result","solved","unsolved","i","verdict","problem","contestId","index","number","a","push","sort","b","r1","rating","r2","undefined","_context","t0","react_default","createElement","map","item","link","tags","tagsStr","key","target","href","name","React","Component","App","handleKeyPress","event","go","handleInput","createRef","bind","assertThisInitialized","window","current","value","placeholder","type","ref","onKeyPress","onClick","className","id","react_router","path","component","render","to","container","document","getElementById","ReactDOM","src_App"],"mappings":"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","file":"static/js/main.67122661.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history';\r\nexport default createBrowserHistory();","import React from 'react'\r\nimport history from './history'\r\n\r\nclass Table extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading: false,\r\n            problems: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const handle = this.props.match.params.handle;\r\n        this.search(handle)\r\n        history.listen((location, action) => {\r\n            const handle = location.pathname.substring(location.pathname.lastIndexOf('/') + 1)\r\n            this.search(handle)\r\n            console.log('handle changed: ' + location + \" \" + action)\r\n        })\r\n    }\r\n\r\n    async search(handle) {\r\n        console.log(handle)\r\n        if (handle.length > 0) {\r\n            this.setState({\r\n                isLoading: true\r\n            })\r\n            try {\r\n                const response = await fetch('https://codeforces.com/api/user.status?handle=' + handle)\r\n                const json = await response.json()\r\n                var problems = json.result;\r\n                var solved = {};\r\n                var unsolved = {};\r\n                for(var i = 0;i<problems.length;i++){\r\n                    if (problems[i].verdict === 'OK') {\r\n                        solved[problems[i].problem.contestId + problems[i].problem.index] = problems[i];\r\n                    }\r\n                }\r\n                for(var i = 0;i<problems.length;i++){\r\n                    if (solved[problems[i].problem.contestId + problems[i].problem.index] == null) {\r\n                        unsolved[problems[i].problem.contestId + problems[i].problem.index] = problems[i];\r\n                    }\r\n                }\r\n                var a = []\r\n                for (var number in unsolved) {\r\n                    a.push(unsolved[number])\r\n                }\r\n                a.sort(function(a, b) {\r\n                    var r1 = a.problem.rating\r\n                    var r2 = b.problem.rating\r\n                    if (r1 == undefined) {\r\n                        r1 = 10e5\r\n                    }\r\n                    if (r2 == undefined) {\r\n                        r2 = 10e5\r\n                    }\r\n                    return r1 - r2;\r\n                })\r\n                console.log(a)\r\n                this.setState({\r\n                    isLoading: false,\r\n                    problems: a\r\n                })\r\n            } catch (e) {\r\n                console.log(e)\r\n                this.setState({\r\n                    isLoading: false,\r\n                    problems: []\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                problems: []\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return 'Loading...'\r\n        }\r\n        if (this.state.problems.length == 0) {\r\n            return 'empty'\r\n        }\r\n        return <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>â„–</th>\r\n                                <th>Name</th>\r\n                                <th>Tags</th>\r\n                                <th>Rating</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            \r\n                            {this.state.problems.map((item, index)=> {\r\n                                const problem = item.problem\r\n                                const link = \"https://codeforces.com/contest/\"+item.contestId+\"/problem/\"+problem.index\r\n                                const tags = problem.tags;\r\n                                var tagsStr = ''\r\n                                for(var i = 0; i < tags.length; i++)\r\n                                    tagsStr += tags[i] + (i != tags.length - 1 ? \", \" : \"\");\r\n\r\n                                return <tr key={index}>\r\n                                    <td><a target='_blank' href={link}>{problem.contestId + problem.index}</a></td>\r\n                                    <td><a target='_blank' href={link}>{problem.name}</a></td>\r\n                                    <td>{tagsStr}</td>\r\n                                    <td>{problem.rating}</td>\r\n                                    </tr>\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n    }\r\n}\r\n\r\nexport default Table;","import React from 'react'\r\nimport history from './history'\r\nimport Table from './Table'\r\nimport PropTypes from \"prop-types\";\r\nimport { BrowserRouter, Router, Route, Link, Switch, Redirect } from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading: false,\r\n            problems: []\r\n        }\r\n        this.handleInput = React.createRef();\r\n        this.go = this.go.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const href = window.location.pathname\r\n        const handle = href.substring(href.lastIndexOf('/') + 1)\r\n        this.handleInput.current.value = handle\r\n    }\r\n\r\n    async go() {\r\n        const handle = this.handleInput.current.value\r\n        console.log(handle)\r\n        history.push(handle)\r\n    }\r\n\r\n    handleKeyPress = (event) => {\r\n        if(event.key == 'Enter'){\r\n            this.go()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <main>\r\n                    <aside>\r\n                        <input placeholder=\"Type your handle\" type=\"text\" ref={this.handleInput} onKeyPress={this.handleKeyPress}></input>\r\n                        <button type=\"submit\" onClick={this.go} className=\"buttonload\" id=\"main_button\">\r\n                        <span id=\"main_button_text\">{this.state.isLoading ? '' : 'OK'}</span>{this.state.isLoading ? <i className=\"fa fa-circle-o-notch fa-spin\" id=\"loading_spinner\"></i> : null }\r\n                        </button>\r\n                        <div className=\"separator\"></div>\r\n                        <a href=\"https://github.com/Hapsidra/codeforces-unsolved\">GitHub</a>\r\n                    </aside>\r\n                    <Router history={history}>\r\n                        <Switch>\r\n                            <Route path=\"/codeforces-unsolved/:handle\" component={Table} />\r\n                            <Route path=\"/\" render={() => (\r\n                                <Redirect to=\"/codeforces-unsolved/tourist\"/>\r\n                            )}/>\r\n                        </Switch>\r\n                    </Router>\r\n                </main>\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\nimport './main.css'\r\n\r\nconst container = document.getElementById('app')\r\nReactDOM.render(<App/>, container)\r\n"],"sourceRoot":""}