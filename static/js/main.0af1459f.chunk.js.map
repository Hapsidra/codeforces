{"version":3,"sources":["history.js","Table.js","App.js","index.js"],"names":["createBrowserHistory","Table","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","problems","undefined","match","handle","params","search","console","log","length","setState","isLoading","fetch","response","json","result","solved","unsolved","i","verdict","problem","contestId","index","number","a","push","sort","b","r1","rating","r2","react_default","createElement","map","item","link","tags","tagsStr","key","target","href","name","React","Component","App","handleKeyPress","event","go","handleInput","createRef","bind","assertThisInitialized","window","location","pathname","substr","current","value","history","placeholder","type","ref","onKeyPress","onClick","className","id","react_router","path","component","container","document","getElementById","ReactDOM","render","src_App"],"mappings":"mPACeA,gBCgGAC,cA9FX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,SAAU,IAHCR,mFAQf,QAAwBS,GAApBN,KAAKJ,MAAMW,MAAoB,CAC/B,IAAMC,EAASR,KAAKJ,MAAMW,MAAME,OAAOD,OACvCR,KAAKU,OAAOF,2EAIPA,0FACTG,QAAQC,IAAIJ,KACRA,EAAOK,OAAS,2BAChBb,KAAKc,SAAS,CACVC,WAAW,aAEQC,MAAM,iDAAmDR,iBAA1ES,kBACaA,EAASC,cAI5B,IAJMA,SACFb,EAAWa,EAAKC,OAChBC,EAAS,GACTC,EAAW,GACPC,EAAI,EAAEA,EAAEjB,EAASQ,OAAOS,IACA,OAAxBjB,EAASiB,GAAGC,UACZH,EAAOf,EAASiB,GAAGE,QAAQC,UAAYpB,EAASiB,GAAGE,QAAQE,OAASrB,EAASiB,IAGrF,IAAQA,EAAI,EAAEA,EAAEjB,EAASQ,OAAOS,IAC6C,MAArEF,EAAOf,EAASiB,GAAGE,QAAQC,UAAYpB,EAASiB,GAAGE,QAAQE,SAC3DL,EAAShB,EAASiB,GAAGE,QAAQC,UAAYpB,EAASiB,GAAGE,QAAQE,OAASrB,EAASiB,IAIvF,IAASK,KADLC,EAAI,GACWP,EACfO,EAAEC,KAAKR,EAASM,IAEpBC,EAAEE,KAAK,SAASF,EAAGG,GACf,IAAIC,EAAKJ,EAAEJ,QAAQS,OACfC,EAAKH,EAAEP,QAAQS,OAOnB,YANU3B,GAAN0B,IACAA,EAAK,UAEC1B,GAAN4B,IACAA,EAAK,KAEFF,EAAKE,IAEhBvB,QAAQC,IAAIgB,GACZ5B,KAAKc,SAAS,CACVC,WAAW,EACXV,SAAUuB,4BAGd5B,KAAKc,SAAS,CACVT,SAAU,0IAMlB,OAAO8B,EAAAP,EAAAQ,cAAA,aACSD,EAAAP,EAAAQ,cAAA,aACID,EAAAP,EAAAQ,cAAA,UACID,EAAAP,EAAAQ,cAAA,oBACAD,EAAAP,EAAAQ,cAAA,kBACAD,EAAAP,EAAAQ,cAAA,kBACAD,EAAAP,EAAAQ,cAAA,sBAGRD,EAAAP,EAAAQ,cAAA,aAEKpC,KAAKI,MAAMC,SAASgC,IAAI,SAACC,EAAMZ,GAK5B,IAJA,IAAMF,EAAUc,EAAKd,QACfe,EAAO,kCAAkCD,EAAKb,UAAU,YAAYD,EAAQE,MAC5Ec,EAAOhB,EAAQgB,KACjBC,EAAU,GACNnB,EAAI,EAAGA,EAAIkB,EAAK3B,OAAQS,IAC5BmB,GAAWD,EAAKlB,IAAMA,GAAKkB,EAAK3B,OAAS,EAAI,KAAO,IAExD,OAAOsB,EAAAP,EAAAQ,cAAA,MAAIM,IAAKhB,GACZS,EAAAP,EAAAQ,cAAA,UAAID,EAAAP,EAAAQ,cAAA,KAAGO,OAAO,SAASC,KAAML,GAAOf,EAAQC,UAAYD,EAAQE,QAChES,EAAAP,EAAAQ,cAAA,UAAID,EAAAP,EAAAQ,cAAA,KAAGO,OAAO,SAASC,KAAML,GAAOf,EAAQqB,OAC5CV,EAAAP,EAAAQ,cAAA,UAAKK,GACLN,EAAAP,EAAAQ,cAAA,UAAKZ,EAAQS,oBAvF7Ba,IAAMC,mBCgDXC,cA3CX,SAAAA,EAAYpD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgD,IACfnD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkD,GAAA7C,KAAAH,KAAMJ,KAmBVqD,eAAiB,SAACC,GACE,SAAbA,EAAMR,KACL7C,EAAKsD,MApBTtD,EAAKO,MAAQ,CACTW,WAAW,EACXV,SAAU,IAEdR,EAAKuD,YAAcN,IAAMO,YACzBxD,EAAKsD,GAAKtD,EAAKsD,GAAGG,KAARxD,OAAAyD,EAAA,EAAAzD,CAAAD,IAPKA,mFAWf,IAAMW,EAASgD,OAAOC,SAASC,SAASC,OAAO,EAAGH,OAAOC,SAASC,SAAS7C,OAAS,GACpFb,KAAKoD,YAAYQ,QAAQC,MAAQrD,6IAI3BA,EAASR,KAAKoD,YAAYQ,QAAQC,MACxCC,EAAQjC,KAAK,IAAMrB,sIAUnB,OAAO2B,EAAAP,EAAAQ,cAAA,YACKD,EAAAP,EAAAQ,cAAA,aACID,EAAAP,EAAAQ,cAAA,SAAO2B,YAAY,mBAAmBC,KAAK,OAAOC,IAAKjE,KAAKoD,YAAac,WAAYlE,KAAKiD,iBAC1Fd,EAAAP,EAAAQ,cAAA,UAAQ4B,KAAK,SAASG,QAASnE,KAAKmD,GAAIiB,UAAU,aAAaC,GAAG,eAClElC,EAAAP,EAAAQ,cAAA,QAAMiC,GAAG,oBAAoBrE,KAAKI,MAAMW,UAAY,GAAK,MAAaf,KAAKI,MAAMW,UAAYoB,EAAAP,EAAAQ,cAAA,KAAGgC,UAAU,+BAA+BC,GAAG,oBAAyB,MAErKlC,EAAAP,EAAAQ,cAAA,OAAKgC,UAAU,cACfjC,EAAAP,EAAAQ,cAAA,KAAGQ,KAAK,mDAAR,WAEJT,EAAAP,EAAAQ,cAACkC,EAAA,EAAD,CAAQR,QAASA,GACb3B,EAAAP,EAAAQ,cAACkC,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAW7E,aAtCxCmD,IAAMC,WCFlB0B,EAAYC,SAASC,eAAe,OAC1CC,IAASC,OAAO1C,EAAAP,EAAAQ,cAAC0C,EAAD,MAAQL","file":"static/js/main.0af1459f.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history';\r\nexport default createBrowserHistory();","import React from 'react'\r\n\r\nclass Table extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            problems: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.match != undefined) {\r\n            const handle = this.props.match.params.handle;\r\n            this.search(handle)\r\n        }\r\n    }\r\n\r\n    async search(handle) {\r\n        console.log(handle)\r\n        if (handle.length > 0) {\r\n            this.setState({\r\n                isLoading: true\r\n            })\r\n            const response = await fetch('https://codeforces.com/api/user.status?handle=' + handle)\r\n            const json = await response.json()\r\n            var problems = json.result;\r\n            var solved = {};\r\n            var unsolved = {};\r\n            for(var i = 0;i<problems.length;i++){\r\n                if (problems[i].verdict === 'OK') {\r\n                    solved[problems[i].problem.contestId + problems[i].problem.index] = problems[i];\r\n                }\r\n            }\r\n            for(var i = 0;i<problems.length;i++){\r\n                if (solved[problems[i].problem.contestId + problems[i].problem.index] == null) {\r\n                    unsolved[problems[i].problem.contestId + problems[i].problem.index] = problems[i];\r\n                }\r\n            }\r\n            var a = []\r\n            for (var number in unsolved) {\r\n                a.push(unsolved[number])\r\n            }\r\n            a.sort(function(a, b) {\r\n                var r1 = a.problem.rating\r\n                var r2 = b.problem.rating\r\n                if (r1 == undefined) {\r\n                    r1 = 10e5\r\n                }\r\n                if (r2 == undefined) {\r\n                    r2 = 10e5\r\n                }\r\n                return r1 - r2;\r\n              })\r\n            console.log(a)\r\n            this.setState({\r\n                isLoading: false,\r\n                problems: a\r\n            })\r\n        } else {\r\n            this.setState({\r\n                problems: []\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>â„–</th>\r\n                                <th>Name</th>\r\n                                <th>Tags</th>\r\n                                <th>Rating</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            \r\n                            {this.state.problems.map((item, index)=> {\r\n                                const problem = item.problem\r\n                                const link = \"https://codeforces.com/contest/\"+item.contestId+\"/problem/\"+problem.index\r\n                                const tags = problem.tags;\r\n                                var tagsStr = ''\r\n                                for(var i = 0; i < tags.length; i++)\r\n                                    tagsStr += tags[i] + (i != tags.length - 1 ? \", \" : \"\");\r\n\r\n                                return <tr key={index}>\r\n                                    <td><a target='_blank' href={link}>{problem.contestId + problem.index}</a></td>\r\n                                    <td><a target='_blank' href={link}>{problem.name}</a></td>\r\n                                    <td>{tagsStr}</td>\r\n                                    <td>{problem.rating}</td>\r\n                                    </tr>\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n    }\r\n}\r\n\r\nexport default Table;","import React from 'react'\r\nimport history from './history'\r\nimport Table from './Table'\r\nimport PropTypes from \"prop-types\";\r\nimport { BrowserRouter, Router, Route, Link } from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading: false,\r\n            problems: []\r\n        }\r\n        this.handleInput = React.createRef();\r\n        this.go = this.go.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const handle = window.location.pathname.substr(1, window.location.pathname.length - 1)\r\n        this.handleInput.current.value = handle\r\n    }\r\n\r\n    async go() {\r\n        const handle = this.handleInput.current.value\r\n        history.push('/' + handle)\r\n    }\r\n\r\n    handleKeyPress = (event) => {\r\n        if(event.key == 'Enter'){\r\n            this.go()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <main>\r\n                    <aside>\r\n                        <input placeholder=\"Type your handle\" type=\"text\" ref={this.handleInput} onKeyPress={this.handleKeyPress}></input>\r\n                        <button type=\"submit\" onClick={this.go} className=\"buttonload\" id=\"main_button\">\r\n                        <span id=\"main_button_text\">{this.state.isLoading ? '' : 'OK'}</span>{this.state.isLoading ? <i className=\"fa fa-circle-o-notch fa-spin\" id=\"loading_spinner\"></i> : null }\r\n                        </button>\r\n                        <div className=\"separator\"></div>\r\n                        <a href=\"https://github.com/Hapsidra/codeforces-unsolved\">GitHub</a>\r\n                    </aside>\r\n                    <Router history={history}>\r\n                        <Route path=\"/:handle\" component={Table} />\r\n                    </Router>\r\n                </main>\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\nconst container = document.getElementById('app')\r\nReactDOM.render(<App/>, container)\r\n"],"sourceRoot":""}